由node.js 建立的server送訊息給Firebase, 
再由Firebase推播給連結的設備.


https://console.firebase.google.com/
在其中建立一個專案,
(範例用tomlin@ntub.edu.tw帳號, 專案名稱為FireChat)
選Notifications, 依說明建立以下google-services.json


測試環境: Android studio 2.1.3, Java SDK 1.8, 模擬器版本21/24
開啟一個basic Activity, 在mipmap及drawable中加入info圖示


由node.js 傳發送訊息給 Firebase, 
由 Firebase將訊息推給擁有某些 registration ID(Token ID)的設備.


在MyFirebaseInstanceIDService中的onTokenRefresh()方法
會在App安裝後的第一次執行時啟動, 或是Token到期後啟動,
此時可以取得設備與Firebase間通訊的TokenId.
Token在伺服器中的存活期是3600秒.
若要uninstall模擬器上的App, 可以在模擬器啟動後, 在cmd模式中輸中:

adb shell pm list packages
adb uninstall com.abc.myapplication

-------------------------------------------------------------
google-services.json  放在專案內的<app>中
(在Android Studio 左邊樹狀圖選Project, 將此檔案加入app資料夾中)
-------------------------------------------------------------




-------------------------------------------------------------
AndroidMenifest.xml
-------------------------------------------------------------
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.abc.myapplication">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- .......................................... -->
        <service
            android:name=".MyFirebaseMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>


        <service
            android:name=".MyInstanceIDService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
            </intent-filter>
        </service>
        <!-- .......................................... -->

    </application>

</manifest>




-------------------------------------------------------------
strings.xml
-------------------------------------------------------------
<resources>
    <string name="app_name">MyApp</string>
    <string name="action_settings">Settings</string>
</resources>




-------------------------------------------------------------
build.gradle  (Project)
-------------------------------------------------------------
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}







-------------------------------------------------------------
build.gradle  (Module:app)
-------------------------------------------------------------
apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.abc.myapplication"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.google.firebase:firebase-messaging:9.0.2'
}
apply plugin: 'com.google.gms.google-services'





-------------------------------------------------------------
common -> Global.java
-------------------------------------------------------------
package com.abc.myapplication.common;

public class Global {
    public static String url="http://192.168.56.1:3000/";
}





-------------------------------------------------------------
MyInstanceIDService.java
-------------------------------------------------------------
package com.abc.myapplication;

import android.util.Log;

import com.abc.myapplication.common.Global;
import com.google.firebase.iid.FirebaseInstanceId;
import com.google.firebase.iid.FirebaseInstanceIdService;

import java.net.HttpURLConnection;
import java.net.URL;


public class MyInstanceIDService extends FirebaseInstanceIdService {

    @Override
    public void onTokenRefresh() {
        String token = FirebaseInstanceId.getInstance().getToken();
        Log.d("********", "Token:" + token);

        HttpURLConnection conn = null;
        try {
            URL url = new URL(Global.url + "1;" +token);
            conn = (HttpURLConnection) url.openConnection();

            conn.setRequestMethod("GET");
            conn.setReadTimeout(5000);
            conn.setConnectTimeout(10000);

            int responseCode = conn.getResponseCode();
            if (responseCode == 200) {
                Log.d("********", "連結成功");
            } else {
                Log.d("********", "連結失敗");
            }
        } catch (Exception e) {
            e.printStackTrace();
            Log.d("********", "HttpURLConnection失敗");
        } finally {
            if (conn != null) {
                conn.disconnect();
            }
        }
    }

    @Override
    public void onCreate() {}
}






-------------------------------------------------------------
MyFirebaseMessagingService.java
-------------------------------------------------------------
package com.abc.myapplication;

import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.media.RingtoneManager;
import android.net.Uri;
import android.support.v4.app.NotificationCompat;
import android.util.Log;

import com.google.firebase.messaging.FirebaseMessagingService;
import com.google.firebase.messaging.RemoteMessage;


public class MyFirebaseMessagingService extends FirebaseMessagingService {
    @Override
    public void onMessageReceived(RemoteMessage remoteMessage) {
        Log.d("*****", "onMessageReceived");
        sendNotification(remoteMessage.getNotification().getBody());
    }


    private void sendNotification(String messageBody) {
        Intent intent = new Intent(this, MainActivity.class);
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        PendingIntent pendingIntent =
                PendingIntent.getActivity(
                        this,
                        0 /* Request code */,
                        intent,
                        PendingIntent.FLAG_ONE_SHOT
                );

        Uri defaultSoundUri= RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)
                .setContentText(messageBody)
                .setAutoCancel(true)
                .setSmallIcon(R.drawable.info)
                .setSound(defaultSoundUri)
                .setContentIntent(pendingIntent);

        NotificationManager notificationManager =
                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

        notificationManager.notify(0, notificationBuilder.build());
    }
}






-------------------------------------------------------------
MainActivity.java
-------------------------------------------------------------
package com.abc.myapplication;

import android.content.Context;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

//--------------------------------------------------------
import com.abc.myapplication.common.Global;
import com.google.firebase.messaging.FirebaseMessaging;
//--------------------------------------------------------


public class MainActivity extends AppCompatActivity {
    //------------------------------
    Context context=this;
    //------------------------------

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //----------------------------------------------------------------
                FirebaseMessaging.getInstance().subscribeToTopic("news");
                Toast.makeText(context, "已加入訂閱", Toast.LENGTH_SHORT).show();
                //----------------------------------------------------------------
            }
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}









-------------------------------------------------------------
Node.js -> index.js
-------------------------------------------------------------
var express = require('express');
var express = require('express');
var router = express.Router();

// 在command模式中加入外掛, 如下:
// npm install fcm-push --save
var FCM = require('fcm-push');


// 在 https://console.firebase.google.com/ 中,
// 點選已建立之專案, 點選"管理" -> 選 CLOUD MESSAGING -> 內有 "伺服器金鑰"
var serverKey = '填入Firebase中專案內的伺服器金鑰';
var fcm = new FCM(serverKey);


// 用來儲存連結設備的token
var map={};
console.log('init, 儲存token個數:'+Object.keys(map).length);


// 傳送範例 http://localhost:3000/2;你好
router.get('/:code;:content', function(req, res, next) {
	var code=req.params.code;
	var content=req.params.content;
	
	console.log("code="+code);
	console.log("content="+content);
	
	//==================
	//儲存連接的token
	//==================
	if(code==1){
		var token=content;
		
		map[token]=true;	
		console.log("-----------------");
		console.log("已儲存:"+token);
		console.log('saved, 儲存token個數:'+Object.keys(map).length);		
		
		//回傳成功連結訊息給連接設備
		res.writeHead(200, {"Content-Type": "application/json"});
		var data = ["status", "已儲存"];		
		var json = JSON.stringify(data);
		res.end(json);
	}
	
	
	//===============================
	//傳送通知給所有的連接設備
	//===============================
	if(code==2){
		var msg=content;
		
		for(var key in map){			
			//在to: 後填入填入由以上程式取得的Token ID
			var message = {
				to: key, 
				collapse_key: '001', 
				notification: {
					title: '我的通知',
					body: msg
				}
			};		
			
		
			fcm.send(message, function(err, response){
				if (err) {
					map[token]=false;
					console.log('--------------------------');
					console.log('通知傳送失敗:'+message.to);
					delete map[message.to];
					console.log('刪除後token個數:'+Object.keys(map).length);			
				} else {
					console.log('--------------------------');
					console.log('通知傳送成功:'+message.to);
				}
			});
		}

		res.render('index', { title: '通知傳已傳送'});
	}	
});

module.exports = router;